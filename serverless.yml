service: lobby
provider:
  name: aws
  runtime: nodejs10.x
  stage: ${opt:stage, 'dev'}
  region: us-west-2
  versionFunctions: false
  websocketsApiName: lobby-ws
  websocketsApiRouteSelectionExpression: $request.body.action
  deploymentBucket:
    name: ${self:service}-${self:provider.stage}-serverless-deployment
  environment:
    STAGE: ${self:provider.stage}
    SERVICE: ${self:service}
    LOBBIES_TABLE: "lobbies"
    PEERS_TABLE: "peers"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.PEERS_TABLE}"

package:
  include:
    - 'dist/**'
    - 'node_modules/**'
    - '!node_modules/nyc/**'
    - '!node_modules/@types/**'
    - '!node_modules/aws-sdk/**'
    - '!node_modules/typescript/**'
    - '!node_modules/typedoc/**'
    - '!node_modules/puppeteer/**'
    - '!node_modules/tslint/**'
  exclude:
    - './**'


functions:
  connect:
    handler: dist/server.connect
    events:
      - websocket:
          route: $connect
  disconnect:
    handler: dist/server.disconnect
    events:
      - websocket:
          route: $disconnect
  customFooHandler:
    handler: handler.fooHandler
    events:
      - websocket:
          route: foo # will trigger if $request.body.action === "foo"

  listPeers:
    handler: dist/server.listPeers
    events:
      - http:
          path: peers
          method: get
          cors: true

resources:
  Resources:
    LobbyTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.LOBBIES_TABLE}
    PeersTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.PEERS_TABLE}
